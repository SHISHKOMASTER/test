buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath(group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true) { exclude group: 'org.apache.logging.log4j' }
        classpath 'org.apache.logging.log4j:log4j-api:2.11.2'
        classpath 'org.apache.logging.log4j:log4j-core:2.11.2'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = '1.16.5-0.0.1'
group = 'net.shishkomaster.whm'
archivesBaseName = 'whm-1.16.5'


java.toolchain.languageVersion = JavaLanguageVersion.of(8)

compileJava {
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
}

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {

    mappings channel: 'official', version: '1.16.5'

    runs {
        client {
            workingDirectory project.file('run')
            property 'mixin.env.disableRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            arg '-mixin.config=whm.mixin.json'
            mods {
                whm {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'mixin.env.disableRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            arg '-mixin.config=whm.mixin.json'

            mods {
                whm {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'mixin.env.disableRefMap', 'true'
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'whm', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            arg '-mixin.config=whm.mixin.json'
            mods {
                whm {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {

    minecraft 'net.minecraftforge:forge:1.16.5-36.2.33'
    annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'

    repositories {
        maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    }
    dependencies {
        implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.16.5:3.0.91')
    }
}

mixin {
    add sourceSets.main, "whm.mixin-refmap.json"
}

jar {
    manifest {
        attributes([
            "Specification-Title": "whm",
            "Specification-Vendor": "whmsareus",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"whmsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder": 0,
            "MixinConfigs" : "whm.mixin.json"

        ])
    }
    rename 'mixin.refmap.json', 'whm.mixin-refmap.json'
}


jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
